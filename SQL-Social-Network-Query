Question 1
 Find the names of all students who are friends with someone named Gabriel. 

 select name from Highschooler 
where ID in (select ID1 from Friend where ID2 in 
(select ID from Highschooler where name = 'Gabriel'));

Question 2
 For every student who likes someone 2 or more grades younger than themselves, return that student's name and grade, and the name and grade of the student they like. 

 select one.name, one.grade, two.name, two.grade
from Highschooler as one
join Likes on Likes.ID1 = one.ID
join Highschooler as two on two.ID = Likes.ID2
where two.grade <= one.grade - 2

Question 3
 For every pair of students who both like each other, return the name and grade of both students. Include each pair only once, with the two names in alphabetical order. 

 select first.name, first.grade, second.name, second.grade 
from Highschooler as first, Highschooler as second, Likes as likesone, Likes as likestwo
where likesone.ID1 = likestwo.ID2 and
likestwo.ID1 = likesone.ID2 and
likesone.ID1 = first.ID and
likesone.ID2 = second.ID and
first.name < second.name;

Question 4
 Find all students who do not appear in the Likes table (as a student who likes or is liked) and return their names and grades. Sort by grade, then by name within each grade. 

 select name, grade
from Highschooler
where id not in (select id1 from likes)
and id not in (select id2 from likes)
order by grade, name

Question 5
 For every situation where student A likes student B, but we have no information about whom B likes (that is, B does not appear as an ID1 in the Likes table), return A and B's names and grades. 

 select (select name from highschooler where id=id1),
(select grade from highschooler where id=id1),
(select name from highschooler where id=id2),
(select grade from highschooler where id=id2)
from Likes
where id2 not in (select id1 from likes);

Question 6
 Find names and grades of students who only have friends in the same grade. Return the result sorted by grade, then by name within each grade. 

 select name, grade
from Highschooler
where highschooler.id not in (select highschooler.id from Highschooler, Friend, Highschooler H2 
where highschooler.id = friend.id1 and friend.id2 = h2.id and highschooler.grade <> h2.grade)
order by grade, name

Question 7
 For each student A who likes a student B where the two are not friends, find if they have a friend C in common (who can introduce them!). For all such trios, return the name and grade of A, B, and C. 

 select a.name, a.grade, b.name, b.grade, c.name, c.grade
from Highschooler a, Highschooler b, Highschooler c, Friend F1, Friend F2, Likes
where a.id = likes.id1 and likes.id2 = b.id and
b.id not in (select id2 from Friend where Friend.ID1 = a.id) and
a.id = f1.id1 and f1.id2 = c.id and 
c.id = f2.id1 and f2.id2 = b.id;

Question 8
 Find the difference between the number of students in the school and the number of different first names. 

 select count(name) - count(distinct name) from Highschooler

 Question 9
  Find the name and grade of all students who are liked by more than one other student. 

  select name, grade
from (select ID2, count(ID2) as numLikes from Likes group by Likes.ID2), Highschooler
where numLikes > 1 and ID2=ID
